---
name: ci

on:
  pull_request:
    branches:
      - master
      - main
      - develop
  push:
    branches:
      - master
      - main
      - develop
env:
  debug_ci: true
jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [self-hosted-macos-12, macos-13, macos-14]
    steps:
# Now handled by Homebrew/actions/setup-homebrew
# See: https://github.com/Homebrew/actions/blob/master/setup-homebrew/main.sh#L207-L242
#      - name: Check out code
#        uses: actions/checkout@v4
      - uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      - name: Add SSH_AUTH_SOCK to user shell .profile
        run: |
          sudo tee -a ~/.profile <<EOPROFILE
          SSH_AUTH_SOCK=${{ env.SSH_AUTH_SOCK }}
          EOPROFILE
      - name: Configure global git SSH URLs
        run: |
          git config --global url."git@github.com:".insteadOf "https://github.com/"

      - name: Set BREWFILE_PATH env var
        run: |
          echo "BREWFILE_PATH=${GITHUB_WORKSPACE}/Brewfile.ci" >> "$GITHUB_ENV"

      - name: DEBUG - Print all shell env exports
        run: export -p
        if: ${{ env.debug_ci == 'true' }}

      - name: Set up Homebrew
        id: set-up-homebrew
        uses: Homebrew/actions/setup-homebrew@master

      - name: Check out Pull Request
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: DEBUG Tap Repo
        run: |
          echo HOMEBREW_TAP_REPOSITORY=${{ steps.set-up-homebrew.outputs.repository-path }}
          ls -l ${{ steps.set-up-homebrew.outputs.repository-path }}
          cd ${{ steps.set-up-homebrew.outputs.repository-path }} && git status && git log --graph --decorate --oneline --all --abbrev-commit
        if: ${{ env.debug_ci == 'true' }}

      - name: Cache Homebrew Bundler RubyGems
        id: cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.set-up-homebrew.outputs.gems-path }}
          key: ${{ matrix.os }}-${{ runner.os }}-${{ runner.arch }}-rubygems-${{ steps.set-up-homebrew.outputs.gems-hash }}
          restore-keys: ${{ matrix.os }}-${{ runner.os }}-${{ runner.arch }}-rubygems-

      - name: Cache style cache
        if: runner.os == 'macOS'
        uses: actions/cache@v4
        with:
          path: ~/Library/Caches/Homebrew/style
          key: macos-style-cache-${{ github.sha }}
          restore-keys: macos-style-cache-

      - name: Cache local Tap Casks
        if: runner.os == 'macOS'
        uses: actions/cache@v4
        with:
          path: |
            ~/Library/Caches/Homebrew/Cask/vmware-fusion@13.5.2--*
            ~/Library/Caches/Homebrew/downloads/*--com.vmware.fusion.zip.tar*
            ~/Library/Caches/Homebrew/downloads/*--machine-*.tar.gz*
          key: brew-${{ matrix.os }}-${{ runner.os }}-${{ runner.arch }}-${{ hashFiles('.github/clear_github_actions_cache') }}-${{ hashFiles( env.BREWFILE_PATH, '**/Brewfile.lock.json') }}-${{ hashFiles('Casks/**.rb') }}
          restore-keys: |
            brew-${{ matrix.os }}-${{ runner.os }}-${{ runner.arch }}-${{ hashFiles('.github/clear_github_actions_cache') }}-${{ hashFiles( env.BREWFILE_PATH, '**/Brewfile.lock.json') }}-${{ hashFiles('Casks/**.rb') }}
            brew-${{ matrix.os }}-${{ runner.os }}-${{ runner.arch }}-${{ hashFiles('.github/clear_github_actions_cache') }}-${{ hashFiles( env.BREWFILE_PATH, '**/Brewfile.lock.json') }}
            brew-${{ matrix.os }}-${{ runner.os }}-${{ runner.arch }}-${{ hashFiles('.github/clear_github_actions_cache') }}

      # Note: Disabling this b/c size is over 3 GiB now!
      # So, cache was actually slowing down the CI run
      # - name: Configure Homebrew cache
      #   uses: actions/cache@v4
      #   with:
      #     path: |
      #       ~/Library/Caches/Homebrew/*--*
      #       ~/Library/Caches/Homebrew/downloads/*--*
      #       ~/Library/Caches/Homebrew/Cask/*--*
      #     key: brew-${{ matrix.os }}-${{ runner.os }}-${{ runner.arch }}-${{ hashFiles('.github/clear_github_actions_cache') }}-${{ hashFiles( env.BREWFILE_PATH, '**/Brewfile.lock.json') }}
      #     restore-keys: |
      #       brew-${{ matrix.os }}-${{ runner.os }}-${{ runner.arch }}-${{ hashFiles('.github/clear_github_actions_cache') }}-${{ hashFiles( env.BREWFILE_PATH, '**/Brewfile.lock.json') }}
      #       brew-${{ matrix.os }}-${{ runner.os }}-${{ runner.arch }}-${{ hashFiles('.github/clear_github_actions_cache') }}

      - name: Run brew update
        env:
          HOMEBREW_COLOR: 1
          HOMEBREW_DEVELOPER: 1
        run: |
          brew update-reset
      - name: Fix Tap repo checked out merge commit ref (post brew update-reset)
        run: |
          cd '${{ steps.set-up-homebrew.outputs.repository-path }}' && git checkout "refs/remotes/pull/${GITHUB_REF_NAME}"
        if: github.ref != 'refs/heads/main' && github.event_name == 'pull_request'
      - name: Clean homebrew cache
        env:
          HOMEBREW_COLOR: 1
          HOMEBREW_DEVELOPER: 1
        run: |
          brew cleanup

      - name: Login to GitHub Packages repo (docker v2 API)
        id: ghcr_login
        env:
          HOMEBREW_COLOR: 1
          HOMEBREW_DEVELOPER: 1
          LYRAPHASE_RUNNER_PACKAGES_GHCR_USER: "${{ secrets.LYRAPHASE_RUNNER_PACKAGES_GHCR_USER }}"
          LYRAPHASE_RUNNER_PACKAGES_GHCR_CLASSIC_TOKEN: "${{ secrets.LYRAPHASE_RUNNER_PACKAGES_GHCR_CLASSIC_TOKEN }}"
        run: |
          brew install jq || true
          if [ "macOS" == "$RUNNER_OS" ]; then
            base64_flags='-b 0 -o -'
          elif [ "Linux" == "$RUNNER_OS" ]; then
            base64_flags='-w 0'
          fi
          # shellcheck disable=SC2086
          GHCR_BASIC_AUTH_TOKEN="$(echo -n "${LYRAPHASE_RUNNER_PACKAGES_GHCR_USER}:${LYRAPHASE_RUNNER_PACKAGES_GHCR_CLASSIC_TOKEN}" | base64 $base64_flags )"
          GHCR_TOKEN="$(curl -o - -v -H "Authorization: Basic ${GHCR_BASIC_AUTH_TOKEN}" \
            "https://ghcr.io/token?service=ghcr.io&scope=repository:${GITHUB_REPOSITORY_OWNER}/${GITHUB_REPOSITORY##*/homebrew-}/*:pull" | \
            jq -jr '.token')"
          if [ -n "$GHCR_TOKEN" ]; then
            echo "ghcr_bearer_token=${GHCR_TOKEN}" >> "${GITHUB_OUTPUT}"
          fi
          if [ -n "$GHCR_BASIC_AUTH_TOKEN" ]; then
            echo "ghcr_basic_token=${GHCR_BASIC_AUTH_TOKEN}" >> "${GITHUB_OUTPUT}"
          fi
          :

      - name: HACK - Force link conflicting go binaries
        env:
          HOMEBREW_COLOR: 1
          HOMEBREW_DEVELOPER: 1
          HOMEBREW_BOTTLE_DOMAIN: 'https://ghcr.io/v2/LyraPhase/right2repair'
          HOMEBREW_GITHUB_PACKAGES_USER: "${{ secrets.LYRAPHASE_RUNNER_PACKAGES_GHCR_USER }}"
          HOMEBREW_DOCKER_REGISTRY_BASIC_AUTH_TOKEN: "${{ steps.ghcr_login.outputs.ghcr_basic_token }}"
          HOMEBREW_DOCKER_REGISTRY_TOKEN: "${{ steps.ghcr_login.outputs.ghcr_bearer_token }}"
        run: |
          if [ -e "/usr/local/opt/go@1.21" ]; then
            brew install go || true
            brew link --overwrite go
          fi
          :

      - name: Install Brewfile.ci dependencies
        env:
          HOMEBREW_COLOR: 1
          HOMEBREW_DEVELOPER: 1
          HOMEBREW_BOTTLE_DOMAIN: 'https://ghcr.io/v2/LyraPhase/right2repair'
          HOMEBREW_GITHUB_PACKAGES_USER: "${{ secrets.LYRAPHASE_RUNNER_PACKAGES_GHCR_USER }}"
          HOMEBREW_DOCKER_REGISTRY_BASIC_AUTH_TOKEN: "${{ steps.ghcr_login.outputs.ghcr_basic_token }}"
          HOMEBREW_DOCKER_REGISTRY_TOKEN: "${{ steps.ghcr_login.outputs.ghcr_bearer_token }}"
          HOMEBREW_ALLOWED_TAPS: 'lyraphase/right2repair'
          HOMEBREW_FORBIDDEN_TAPS: 'homebrew/core'
        run: |
          curl -o /tmp/go-1.23.2.arm64_sonoma.tar.gz  -v -L -H "Authorization: Bearer ${HOMEBREW_DOCKER_REGISTRY_TOKEN}"  -H 'Accept: application/gzip, application/vnd.oci.image.layer.v1.tar+gzip' "${HOMEBREW_BOTTLE_DOMAIN}/go/blobs/sha256:719329749bebde70f295cacf645c45ae155fda041bc92c50119997a0dd00e522"
          brew bundle install --file="${BREWFILE_PATH}"

      - name: DEBUG - GitHub Workspace
        run: |
          echo GITHUB_WORKSPACE="$GITHUB_WORKSPACE"
        if: ${{ env.debug_ci == 'true' }}
      - name: DEBUG - Print all shell env exports
        run: export -p
        if: ${{ env.debug_ci == 'true' }}
      - name: DEBUG - List workspace and Homebrew contents
        run: |
          ls -lR "${GITHUB_WORKSPACE}"
          ls -lR "$(brew --prefix)"
        if: ${{ env.debug_ci == 'true' }}
      - name: Run test setup
        env:
          HOMEBREW_COLOR: 1
          HOMEBREW_DEVELOPER: 1
          HOMEBREW_NO_SORBET_RUNTIME: 1
        run: make test-before || true
      - name: Run tap install
        env:
          HOMEBREW_COLOR: 1
          HOMEBREW_DEVELOPER: 1
          HOMEBREW_NO_SORBET_RUNTIME: 1
        run: make install
      - name: Run test & install
        env:
          HOMEBREW_COLOR: 1
          HOMEBREW_DEVELOPER: 1
          HOMEBREW_DISPLAY_INSTALL_TIMES: 1
          HOMEBREW_BOTTLE_DOMAIN: 'https://ghcr.io/v2/LyraPhase/right2repair'
          HOMEBREW_GITHUB_PACKAGES_USER: "${{ secrets.LYRAPHASE_RUNNER_PACKAGES_GHCR_USER }}"
          HOMEBREW_DOCKER_REGISTRY_BASIC_AUTH_TOKEN: "${{ steps.ghcr_login.outputs.ghcr_basic_token }}"
          HOMEBREW_DOCKER_REGISTRY_TOKEN: "${{ steps.ghcr_login.outputs.ghcr_bearer_token }}"
        run: |
          make test
      - name: Upload install.log on failure
        if: ${{ failure() }}
        uses: actions/upload-artifact@v4
        with:
          name: Build failure logs
          path: /var/log/install.log
      - name: Cleanup & teardown after test
        if: always()
        env:
          HOMEBREW_COLOR: 1
          HOMEBREW_DEVELOPER: 1
          HOMEBREW_DISPLAY_INSTALL_TIMES: 1
        run: |
          make test-clean
